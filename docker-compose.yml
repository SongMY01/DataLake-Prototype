services:
  redis:
    image: redis:7.4.3
    container_name: sv_redis
    ports:
      - "6379:6379"
    volumes:
      - ./backend/db/redis/data:/data
    networks:
      - my-network

  minio:
    image: minio/minio
    container_name: sv_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./backend/db/minIO/data:/data
    networks:
      - my-network

  rest:
    image: tabulario/iceberg-rest:latest
    container_name: sv_rest
    ports:
      - "8181:8181"
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      JAVA_TOOL_OPTIONS: "-Daws.s3.path-style-access=true"
      CATALOG_CATALOG_IMPL: org.apache.iceberg.jdbc.JdbcCatalog
      CATALOG_URI: jdbc:sqlite:/tmp/catalog.db
      CATALOG_WAREHOUSE: s3://rest-bucket
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_S3_ACCESS__KEY__ID: minioadmin
      CATALOG_S3_SECRET__ACCESS__KEY: minioadmin
      CATALOG_S3_PATH__STYLE__ACCESS: "true"
      CATALOG_S3_REGION: us-east-1
      CATALOG_S3_ACCESS_KEY_ID: minioadmin
      CATALOG_S3_SECRET_ACCESS_KEY: minioadmin
      CATALOG_IO_IMPL: org.apache.iceberg.aws.s3.S3FileIO
    networks:
      - my-network
    depends_on:
      - minio

  backend:
    build:
      context: ./backend
    container_name: sv_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - minio
    networks:
      - my-network

  event_loader:
    build:
      context: ./backend
      dockerfile: Dockerfile.event_loader
    container_name: sv_event_loader
    volumes:
      - ./backend:/app
    networks:
      - my-network

  streamlit:
    build:
      context: ./backend
      dockerfile: Dockerfile.streamlit 
    command: streamlit run streamlit/main.py
    container_name: sv_streamlit
    volumes:
      - ./backend:/app
    ports:
      - "8501:8501"
    depends_on:
      - backend

    networks:
      - my-network

  frontend:
    build: ./frontend
    container_name: sv_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - my-network

networks:
  my-network:
    external: true